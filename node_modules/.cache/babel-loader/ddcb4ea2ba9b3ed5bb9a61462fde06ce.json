{"ast":null,"code":"var domparser = require('./domparser');\nvar utilities = require('./utilities');\nvar formatDOM = utilities.formatDOM;\nvar isIE9 = utilities.isIE(9);\nvar DIRECTIVE_REGEX = /<(![a-zA-Z\\s]+)>/; // e.g., <!doctype html>\n\n/**\n * Parses HTML and reformats DOM nodes output.\n *\n * @param  {String} html - The HTML string.\n * @return {Array}       - The formatted DOM nodes.\n */\nfunction parseDOM(html) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n  if (!html) {\n    return [];\n  }\n\n  // match directive\n  var match = html.match(DIRECTIVE_REGEX);\n  var directive;\n  if (match && match[1]) {\n    directive = match[1];\n\n    // remove directive in IE9 because DOMParser uses\n    // MIME type 'text/xml' instead of 'text/html'\n    if (isIE9) {\n      html = html.replace(match[0], '');\n    }\n  }\n  return formatDOM(domparser(html), null, directive);\n}\nmodule.exports = parseDOM;","map":{"version":3,"names":["domparser","require","utilities","formatDOM","isIE9","isIE","DIRECTIVE_REGEX","parseDOM","html","TypeError","match","directive","replace","module","exports"],"sources":["/Users/oluwatobilobaogunbi/Desktop/UOttawa/tobiogunbiwebsite/react-portfolio/node_modules/html-dom-parser/lib/html-to-dom-client.js"],"sourcesContent":["var domparser = require('./domparser');\nvar utilities = require('./utilities');\n\nvar formatDOM = utilities.formatDOM;\nvar isIE9 = utilities.isIE(9);\n\nvar DIRECTIVE_REGEX = /<(![a-zA-Z\\s]+)>/; // e.g., <!doctype html>\n\n/**\n * Parses HTML and reformats DOM nodes output.\n *\n * @param  {String} html - The HTML string.\n * @return {Array}       - The formatted DOM nodes.\n */\nfunction parseDOM(html) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!html) {\n    return [];\n  }\n\n  // match directive\n  var match = html.match(DIRECTIVE_REGEX);\n  var directive;\n\n  if (match && match[1]) {\n    directive = match[1];\n\n    // remove directive in IE9 because DOMParser uses\n    // MIME type 'text/xml' instead of 'text/html'\n    if (isIE9) {\n      html = html.replace(match[0], '');\n    }\n  }\n\n  return formatDOM(domparser(html), null, directive);\n}\n\nmodule.exports = parseDOM;\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAa,CAAC;AACtC,IAAIC,SAAS,GAAGD,OAAO,CAAC,aAAa,CAAC;AAEtC,IAAIE,SAAS,GAAGD,SAAS,CAACC,SAAS;AACnC,IAAIC,KAAK,GAAGF,SAAS,CAACG,IAAI,CAAC,CAAC,CAAC;AAE7B,IAAIC,eAAe,GAAG,kBAAkB,CAAC,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAACC,IAAI,EAAE;EACtB,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5B,MAAM,IAAIC,SAAS,CAAC,iCAAiC,CAAC;EACxD;EAEA,IAAI,CAACD,IAAI,EAAE;IACT,OAAO,EAAE;EACX;;EAEA;EACA,IAAIE,KAAK,GAAGF,IAAI,CAACE,KAAK,CAACJ,eAAe,CAAC;EACvC,IAAIK,SAAS;EAEb,IAAID,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;IACrBC,SAAS,GAAGD,KAAK,CAAC,CAAC,CAAC;;IAEpB;IACA;IACA,IAAIN,KAAK,EAAE;MACTI,IAAI,GAAGA,IAAI,CAACI,OAAO,CAACF,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACnC;EACF;EAEA,OAAOP,SAAS,CAACH,SAAS,CAACQ,IAAI,CAAC,EAAE,IAAI,EAAEG,SAAS,CAAC;AACpD;AAEAE,MAAM,CAACC,OAAO,GAAGP,QAAQ"},"metadata":{},"sourceType":"script"}