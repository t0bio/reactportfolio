{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.simulations = simulations;\nexports.default = generate;\nvar _CSSPropertyOperations = require('./CSSPropertyOperations');\nvar _plugins = require('./plugins');\nvar isBrowser = typeof window !== 'undefined';\n// import type { AST } from './types';\n\n// a flag to enable simulation meta tags on dom nodes\n// defaults to true in dev mode. recommend *not* to\n// toggle often.\nvar canSimulate = process.env.NODE_ENV !== 'production';\n\n// we use these flags for issuing warnings when simulate is called\n// in prod / in incorrect order\nvar warned1 = false,\n  warned2 = false;\n\n// toggles simulation activity. shouldn't be needed in most cases\nfunction simulations() {\n  var bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  canSimulate = !!bool;\n}\n\n// takes a string, converts to lowercase, strips out nonalphanumeric.\nfunction simple(str) {\n  var replace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return str.toLowerCase().replace(/[^a-z0-9]/g, replace);\n}\n\n// from https://github.com/j2css/j2c/blob/5d381c2d721d04b54fabe6a165d587247c3087cb/src/helpers.js#L28-L61\n\n// \"Tokenizes\" the selectors into parts relevant for the next function.\n// Strings and comments are matched, but ignored afterwards.\n// This is not a full tokenizers. It only recognizes comas, parentheses,\n// strings and comments.\n// regexp generated by scripts/regexps.js then trimmed by hand\nvar selectorTokenizer = /[(),]|\"(?:\\\\.|[^\"\\n])*\"|'(?:\\\\.|[^'\\n])*'|\\/\\*[\\s\\S]*?\\*\\//g;\n\n/**\n * This will split a coma-separated selector list into individual selectors,\n * ignoring comas in strings, comments and in :pseudo-selectors(parameter, lists).\n *\n * @param {string} selector\n * @return {string[]}\n */\n\nfunction splitSelector(selector) {\n  if (selector.indexOf(',') === -1) {\n    return [selector];\n  }\n  var indices = [],\n    res = [],\n    inParen = 0,\n    o;\n  /*eslint-disable no-cond-assign*/\n  while (o = selectorTokenizer.exec(selector)) {\n    /*eslint-enable no-cond-assign*/\n    switch (o[0]) {\n      case '(':\n        inParen++;\n        break;\n      case ')':\n        inParen--;\n        break;\n      case ',':\n        if (inParen) break;\n        indices.push(o.index);\n    }\n  }\n  for (o = indices.length; o--;) {\n    res.unshift(selector.slice(indices[o] + 1));\n    selector = selector.slice(0, indices[o]);\n  }\n  res.unshift(selector);\n  return res;\n}\nfunction selector(id) {\n  var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  if (!id && path) {\n    return path.replace(/\\&/g, '');\n  }\n  if (id && !path) return '.' + id;\n  var x = splitSelector(path).map(function (x) {\n    return x.indexOf('&') >= 0 ? x.replace(/\\&/gm, '.' + id) // todo - make sure each sub selector has an &\n    : '.' + id + x;\n  }).join(',');\n  if (canSimulate && /^\\&\\:/.exec(path) && !/\\s/.exec(path)) {\n    x += ',.' + id + '[data-simulate-' + simple(path) + ']';\n  }\n  return x;\n}\nfunction toCSS(node) {\n  var result = (0, _plugins.prefixes)((0, _plugins.fallbacks)((0, _plugins.contentWrap)(node)));\n  return result.selector + '{' + (0, _CSSPropertyOperations.createMarkupForStyles)(result.style) + '}';\n}\nfunction toCSSArray(id, parsed) {\n  var css = [];\n\n  // plugins here\n  var plain = parsed.plain,\n    selects = parsed.selects,\n    medias = parsed.medias,\n    supports = parsed.supports;\n  // todo - :host?\n\n  if (plain) {\n    css.push(toCSS({\n      style: plain,\n      selector: selector(id)\n    }));\n  }\n  if (selects) {\n    Object.keys(selects).forEach(function (key) {\n      return css.push(toCSS({\n        style: selects[key],\n        selector: selector(id, key)\n      }));\n    });\n  }\n  if (medias) {\n    Object.keys(medias).forEach(function (key) {\n      return css.push(key + '{' + toCSSArray(id, medias[key]).join('') + '}');\n    });\n  }\n  if (supports) {\n    Object.keys(supports).forEach(function (key) {\n      return css.push(key + '{' + toCSSArray(id, supports[key]).join('') + '}');\n    });\n  }\n  return css;\n}\n\n// todo - if server side, then cache on classname\nfunction generate(_ref) {\n  var className = _ref.className,\n    parsed = _ref.parsed;\n  return toCSSArray(className, parsed);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","simulations","default","generate","_CSSPropertyOperations","require","_plugins","isBrowser","window","canSimulate","process","env","NODE_ENV","warned1","warned2","bool","arguments","length","undefined","simple","str","replace","toLowerCase","selectorTokenizer","splitSelector","selector","indexOf","indices","res","inParen","o","exec","push","index","unshift","slice","id","path","x","map","join","toCSS","node","result","prefixes","fallbacks","contentWrap","createMarkupForStyles","style","toCSSArray","parsed","css","plain","selects","medias","supports","keys","forEach","key","_ref","className"],"sources":["/Users/oluwatobilobaogunbi/Desktop/UOttawa/reactportfolio/node_modules/glam/lib/generate.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.simulations = simulations;\nexports.default = generate;\n\nvar _CSSPropertyOperations = require('./CSSPropertyOperations');\n\nvar _plugins = require('./plugins');\n\nvar isBrowser = typeof window !== 'undefined';\n// import type { AST } from './types';\n\n\n// a flag to enable simulation meta tags on dom nodes\n// defaults to true in dev mode. recommend *not* to\n// toggle often.\nvar canSimulate = process.env.NODE_ENV !== 'production';\n\n// we use these flags for issuing warnings when simulate is called\n// in prod / in incorrect order\nvar warned1 = false,\n    warned2 = false;\n\n// toggles simulation activity. shouldn't be needed in most cases\nfunction simulations() {\n  var bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  canSimulate = !!bool;\n}\n\n// takes a string, converts to lowercase, strips out nonalphanumeric.\nfunction simple(str) {\n  var replace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  return str.toLowerCase().replace(/[^a-z0-9]/g, replace);\n}\n\n// from https://github.com/j2css/j2c/blob/5d381c2d721d04b54fabe6a165d587247c3087cb/src/helpers.js#L28-L61\n\n// \"Tokenizes\" the selectors into parts relevant for the next function.\n// Strings and comments are matched, but ignored afterwards.\n// This is not a full tokenizers. It only recognizes comas, parentheses,\n// strings and comments.\n// regexp generated by scripts/regexps.js then trimmed by hand\nvar selectorTokenizer = /[(),]|\"(?:\\\\.|[^\"\\n])*\"|'(?:\\\\.|[^'\\n])*'|\\/\\*[\\s\\S]*?\\*\\//g;\n\n/**\n * This will split a coma-separated selector list into individual selectors,\n * ignoring comas in strings, comments and in :pseudo-selectors(parameter, lists).\n *\n * @param {string} selector\n * @return {string[]}\n */\n\nfunction splitSelector(selector) {\n  if (selector.indexOf(',') === -1) {\n    return [selector];\n  }\n\n  var indices = [],\n      res = [],\n      inParen = 0,\n      o;\n  /*eslint-disable no-cond-assign*/\n  while (o = selectorTokenizer.exec(selector)) {\n    /*eslint-enable no-cond-assign*/\n    switch (o[0]) {\n      case '(':\n        inParen++;\n        break;\n      case ')':\n        inParen--;\n        break;\n      case ',':\n        if (inParen) break;\n        indices.push(o.index);\n    }\n  }\n  for (o = indices.length; o--;) {\n    res.unshift(selector.slice(indices[o] + 1));\n    selector = selector.slice(0, indices[o]);\n  }\n  res.unshift(selector);\n  return res;\n}\n\nfunction selector(id) {\n  var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (!id && path) {\n    return path.replace(/\\&/g, '');\n  }\n  if (id && !path) return '.' + id;\n\n  var x = splitSelector(path).map(function (x) {\n    return x.indexOf('&') >= 0 ? x.replace(/\\&/gm, '.' + id) // todo - make sure each sub selector has an &\n    : '.' + id + x;\n  }).join(',');\n\n  if (canSimulate && /^\\&\\:/.exec(path) && !/\\s/.exec(path)) {\n    x += ',.' + id + '[data-simulate-' + simple(path) + ']';\n  }\n  return x;\n}\n\nfunction toCSS(node) {\n  var result = (0, _plugins.prefixes)((0, _plugins.fallbacks)((0, _plugins.contentWrap)(node)));\n  return result.selector + '{' + (0, _CSSPropertyOperations.createMarkupForStyles)(result.style) + '}';\n}\n\nfunction toCSSArray(id, parsed) {\n  var css = [];\n\n  // plugins here\n  var plain = parsed.plain,\n      selects = parsed.selects,\n      medias = parsed.medias,\n      supports = parsed.supports;\n  // todo - :host?\n\n  if (plain) {\n    css.push(toCSS({ style: plain, selector: selector(id) }));\n  }\n  if (selects) {\n    Object.keys(selects).forEach(function (key) {\n      return css.push(toCSS({ style: selects[key], selector: selector(id, key) }));\n    });\n  }\n  if (medias) {\n    Object.keys(medias).forEach(function (key) {\n      return css.push(key + '{' + toCSSArray(id, medias[key]).join('') + '}');\n    });\n  }\n  if (supports) {\n    Object.keys(supports).forEach(function (key) {\n      return css.push(key + '{' + toCSSArray(id, supports[key]).join('') + '}');\n    });\n  }\n  return css;\n}\n\n// todo - if server side, then cache on classname\nfunction generate(_ref) {\n  var className = _ref.className,\n      parsed = _ref.parsed;\n\n  return toCSSArray(className, parsed);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}