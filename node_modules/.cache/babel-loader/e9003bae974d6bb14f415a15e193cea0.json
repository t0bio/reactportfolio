{"ast":null,"code":"var utilities = require('./utilities');\n\n// constants\nvar HTML = 'html';\nvar HEAD = 'head';\nvar BODY = 'body';\nvar FIRST_TAG_REGEX = /<([a-zA-Z]+[0-9]?)/; // e.g., <h1>\nvar HEAD_TAG_REGEX = /<head.*>/i;\nvar BODY_TAG_REGEX = /<body.*>/i;\n// http://www.w3.org/TR/html/syntax.html#void-elements\nvar VOID_ELEMENTS_REGEX = /<(area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)(.*?)\\/?>/gi;\n\n// detect IE browser\nvar isIE9 = utilities.isIE(9);\nvar isIE = isIE9 || utilities.isIE();\n\n/**\n * DOMParser (performance: slow).\n *\n * @see https://developer.mozilla.org/docs/Web/API/DOMParser#Parsing_an_SVG_or_HTML_document\n */\nvar parseFromString;\nif (typeof window.DOMParser === 'function') {\n  var domParser = new window.DOMParser();\n\n  // IE9 does not support 'text/html' MIME type\n  // https://msdn.microsoft.com/en-us/library/ff975278(v=vs.85).aspx\n  var mimeType = isIE9 ? 'text/xml' : 'text/html';\n\n  /**\n   * Creates an HTML document using `DOMParser.parseFromString`.\n   *\n   * @param  {string} html      - The HTML string.\n   * @param  {string} [tagName] - The element to render the HTML (with 'body' as fallback).\n   * @return {HTMLDocument}\n   */\n  parseFromString = function domStringParser(html, tagName) {\n    if (tagName) {\n      html = '<' + tagName + '>' + html + '</' + tagName + '>';\n    }\n\n    // because IE9 only supports MIME type 'text/xml', void elements need to be self-closed\n    if (isIE9) {\n      html = html.replace(VOID_ELEMENTS_REGEX, '<$1$2$3/>');\n    }\n    return domParser.parseFromString(html, mimeType);\n  };\n}\n\n/**\n * DOMImplementation (performance: fair).\n *\n * @see https://developer.mozilla.org/docs/Web/API/DOMImplementation/createHTMLDocument\n */\nvar parseFromDocument;\nif (typeof document.implementation === 'object') {\n  // title parameter is required in IE\n  // https://msdn.microsoft.com/en-us/library/ff975457(v=vs.85).aspx\n  var doc = document.implementation.createHTMLDocument(isIE ? 'HTML_DOM_PARSER_TITLE' : undefined);\n\n  /**\n   * Use HTML document created by `document.implementation.createHTMLDocument`.\n   *\n   * @param  {string} html      - The HTML string.\n   * @param  {string} [tagName] - The element to render the HTML (with 'body' as fallback).\n   * @return {HTMLDocument}\n   */\n  parseFromDocument = function createHTMLDocument(html, tagName) {\n    if (tagName) {\n      doc.documentElement.getElementsByTagName(tagName)[0].innerHTML = html;\n      return doc;\n    }\n    try {\n      doc.documentElement.innerHTML = html;\n      return doc;\n      // fallback when certain elements in `documentElement` are read-only (IE9)\n    } catch (err) {\n      if (parseFromString) {\n        return parseFromString(html);\n      }\n    }\n  };\n}\n\n/**\n * Template (performance: fast).\n *\n * @see https://developer.mozilla.org/docs/Web/HTML/Element/template\n */\nvar parseFromTemplate;\nvar template = document.createElement('template');\nif (template.content) {\n  /**\n   * Uses a template element (content fragment) to parse HTML.\n   *\n   * @param  {string} html - The HTML string.\n   * @return {NodeList}\n   */\n  parseFromTemplate = function templateParser(html) {\n    template.innerHTML = html;\n    return template.content.childNodes;\n  };\n}\n\n// fallback document parser\nvar parseWithFallback = parseFromDocument || parseFromString;\n\n/**\n * Parses HTML string to DOM nodes.\n *\n * @param  {string} html - The HTML string.\n * @return {NodeList|Array}\n */\nfunction domparser(html) {\n  var firstTagName;\n  var match = html.match(FIRST_TAG_REGEX);\n  if (match && match[1]) {\n    firstTagName = match[1].toLowerCase();\n  }\n  var doc;\n  var element;\n  var elements;\n  switch (firstTagName) {\n    case HTML:\n      if (parseFromString) {\n        doc = parseFromString(html);\n\n        // the created document may come with filler head/body elements,\n        // so make sure to remove them if they don't actually exist\n        if (!HEAD_TAG_REGEX.test(html)) {\n          element = doc.getElementsByTagName(HEAD)[0];\n          if (element) {\n            element.parentNode.removeChild(element);\n          }\n        }\n        if (!BODY_TAG_REGEX.test(html)) {\n          element = doc.getElementsByTagName(BODY)[0];\n          if (element) {\n            element.parentNode.removeChild(element);\n          }\n        }\n        return doc.getElementsByTagName(HTML);\n      }\n      break;\n    case HEAD:\n    case BODY:\n      if (parseWithFallback) {\n        elements = parseWithFallback(html).getElementsByTagName(firstTagName);\n\n        // account for possibility of sibling\n        if (BODY_TAG_REGEX.test(html) && HEAD_TAG_REGEX.test(html)) {\n          return elements[0].parentNode.childNodes;\n        }\n        return elements;\n      }\n      break;\n\n    // low-level tag or text\n    default:\n      if (parseFromTemplate) {\n        return parseFromTemplate(html);\n      }\n      if (parseWithFallback) {\n        return parseWithFallback(html, BODY).getElementsByTagName(BODY)[0].childNodes;\n      }\n      break;\n  }\n  return [];\n}\nmodule.exports = domparser;","map":{"version":3,"names":["utilities","require","HTML","HEAD","BODY","FIRST_TAG_REGEX","HEAD_TAG_REGEX","BODY_TAG_REGEX","VOID_ELEMENTS_REGEX","isIE9","isIE","parseFromString","window","DOMParser","domParser","mimeType","domStringParser","html","tagName","replace","parseFromDocument","document","implementation","doc","createHTMLDocument","undefined","documentElement","getElementsByTagName","innerHTML","err","parseFromTemplate","template","createElement","content","templateParser","childNodes","parseWithFallback","domparser","firstTagName","match","toLowerCase","element","elements","test","parentNode","removeChild","module","exports"],"sources":["/Users/oluwatobilobaogunbi/Desktop/UOttawa/tobiogunbiwebsite/react-portfolio/node_modules/html-dom-parser/lib/domparser.js"],"sourcesContent":["var utilities = require('./utilities');\n\n// constants\nvar HTML = 'html';\nvar HEAD = 'head';\nvar BODY = 'body';\nvar FIRST_TAG_REGEX = /<([a-zA-Z]+[0-9]?)/; // e.g., <h1>\nvar HEAD_TAG_REGEX = /<head.*>/i;\nvar BODY_TAG_REGEX = /<body.*>/i;\n// http://www.w3.org/TR/html/syntax.html#void-elements\nvar VOID_ELEMENTS_REGEX = /<(area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)(.*?)\\/?>/gi;\n\n// detect IE browser\nvar isIE9 = utilities.isIE(9);\nvar isIE = isIE9 || utilities.isIE();\n\n/**\n * DOMParser (performance: slow).\n *\n * @see https://developer.mozilla.org/docs/Web/API/DOMParser#Parsing_an_SVG_or_HTML_document\n */\nvar parseFromString;\n\nif (typeof window.DOMParser === 'function') {\n  var domParser = new window.DOMParser();\n\n  // IE9 does not support 'text/html' MIME type\n  // https://msdn.microsoft.com/en-us/library/ff975278(v=vs.85).aspx\n  var mimeType = isIE9 ? 'text/xml' : 'text/html';\n\n  /**\n   * Creates an HTML document using `DOMParser.parseFromString`.\n   *\n   * @param  {string} html      - The HTML string.\n   * @param  {string} [tagName] - The element to render the HTML (with 'body' as fallback).\n   * @return {HTMLDocument}\n   */\n  parseFromString = function domStringParser(html, tagName) {\n    if (tagName) {\n      html = '<' + tagName + '>' + html + '</' + tagName + '>';\n    }\n\n    // because IE9 only supports MIME type 'text/xml', void elements need to be self-closed\n    if (isIE9) {\n      html = html.replace(VOID_ELEMENTS_REGEX, '<$1$2$3/>');\n    }\n\n    return domParser.parseFromString(html, mimeType);\n  };\n}\n\n/**\n * DOMImplementation (performance: fair).\n *\n * @see https://developer.mozilla.org/docs/Web/API/DOMImplementation/createHTMLDocument\n */\nvar parseFromDocument;\n\nif (typeof document.implementation === 'object') {\n  // title parameter is required in IE\n  // https://msdn.microsoft.com/en-us/library/ff975457(v=vs.85).aspx\n  var doc = document.implementation.createHTMLDocument(\n    isIE ? 'HTML_DOM_PARSER_TITLE' : undefined\n  );\n\n  /**\n   * Use HTML document created by `document.implementation.createHTMLDocument`.\n   *\n   * @param  {string} html      - The HTML string.\n   * @param  {string} [tagName] - The element to render the HTML (with 'body' as fallback).\n   * @return {HTMLDocument}\n   */\n  parseFromDocument = function createHTMLDocument(html, tagName) {\n    if (tagName) {\n      doc.documentElement.getElementsByTagName(tagName)[0].innerHTML = html;\n      return doc;\n    }\n\n    try {\n      doc.documentElement.innerHTML = html;\n      return doc;\n      // fallback when certain elements in `documentElement` are read-only (IE9)\n    } catch (err) {\n      if (parseFromString) {\n        return parseFromString(html);\n      }\n    }\n  };\n}\n\n/**\n * Template (performance: fast).\n *\n * @see https://developer.mozilla.org/docs/Web/HTML/Element/template\n */\nvar parseFromTemplate;\nvar template = document.createElement('template');\n\nif (template.content) {\n  /**\n   * Uses a template element (content fragment) to parse HTML.\n   *\n   * @param  {string} html - The HTML string.\n   * @return {NodeList}\n   */\n  parseFromTemplate = function templateParser(html) {\n    template.innerHTML = html;\n    return template.content.childNodes;\n  };\n}\n\n// fallback document parser\nvar parseWithFallback = parseFromDocument || parseFromString;\n\n/**\n * Parses HTML string to DOM nodes.\n *\n * @param  {string} html - The HTML string.\n * @return {NodeList|Array}\n */\nfunction domparser(html) {\n  var firstTagName;\n  var match = html.match(FIRST_TAG_REGEX);\n\n  if (match && match[1]) {\n    firstTagName = match[1].toLowerCase();\n  }\n\n  var doc;\n  var element;\n  var elements;\n\n  switch (firstTagName) {\n    case HTML:\n      if (parseFromString) {\n        doc = parseFromString(html);\n\n        // the created document may come with filler head/body elements,\n        // so make sure to remove them if they don't actually exist\n        if (!HEAD_TAG_REGEX.test(html)) {\n          element = doc.getElementsByTagName(HEAD)[0];\n          if (element) {\n            element.parentNode.removeChild(element);\n          }\n        }\n\n        if (!BODY_TAG_REGEX.test(html)) {\n          element = doc.getElementsByTagName(BODY)[0];\n          if (element) {\n            element.parentNode.removeChild(element);\n          }\n        }\n\n        return doc.getElementsByTagName(HTML);\n      }\n      break;\n\n    case HEAD:\n    case BODY:\n      if (parseWithFallback) {\n        elements = parseWithFallback(html).getElementsByTagName(firstTagName);\n\n        // account for possibility of sibling\n        if (BODY_TAG_REGEX.test(html) && HEAD_TAG_REGEX.test(html)) {\n          return elements[0].parentNode.childNodes;\n        }\n\n        return elements;\n      }\n      break;\n\n    // low-level tag or text\n    default:\n      if (parseFromTemplate) {\n        return parseFromTemplate(html);\n      }\n\n      if (parseWithFallback) {\n        return parseWithFallback(html, BODY).getElementsByTagName(BODY)[0]\n          .childNodes;\n      }\n\n      break;\n  }\n\n  return [];\n}\n\nmodule.exports = domparser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}