{"ast":null,"code":"var CASE_SENSITIVE_TAG_NAMES = require('./constants').CASE_SENSITIVE_TAG_NAMES;\nvar caseSensitiveTagNamesMap = {};\nvar tagName;\nfor (var i = 0, len = CASE_SENSITIVE_TAG_NAMES.length; i < len; i++) {\n  tagName = CASE_SENSITIVE_TAG_NAMES[i];\n  caseSensitiveTagNamesMap[tagName.toLowerCase()] = tagName;\n}\n\n/**\n * Gets case-sensitive tag name.\n *\n * @param  {String}           tagName - The lowercase tag name.\n * @return {String|undefined}\n */\nfunction getCaseSensitiveTagName(tagName) {\n  return caseSensitiveTagNamesMap[tagName];\n}\n\n/**\n * Formats DOM attributes to a hash map.\n *\n * @param  {NamedNodeMap} attributes - The list of attributes.\n * @return {Object}                  - A map of attribute name to value.\n */\nfunction formatAttributes(attributes) {\n  var result = {};\n  var attribute;\n  // `NamedNodeMap` is array-like\n  for (var i = 0, len = attributes.length; i < len; i++) {\n    attribute = attributes[i];\n    result[attribute.name] = attribute.value;\n  }\n  return result;\n}\n\n/**\n * Corrects the tag name if it is case-sensitive (SVG).\n * Otherwise, returns the lowercase tag name (HTML).\n *\n * @param  {String} tagName - The lowercase tag name.\n * @return {String}         - The formatted tag name.\n */\nfunction formatTagName(tagName) {\n  tagName = tagName.toLowerCase();\n  var caseSensitiveTagName = getCaseSensitiveTagName(tagName);\n  if (caseSensitiveTagName) {\n    return caseSensitiveTagName;\n  }\n  return tagName;\n}\n\n/**\n * Formats the browser DOM nodes to mimic the output of `htmlparser2.parseDOM()`.\n *\n * @param  {NodeList} nodes        - The DOM nodes.\n * @param  {Object}   [parentObj]  - The formatted parent node.\n * @param  {String}   [directive]  - The directive.\n * @return {Object[]}              - The formatted DOM object.\n */\nfunction formatDOM(nodes, parentObj, directive) {\n  parentObj = parentObj || null;\n  var result = [];\n  var node;\n  var prevNode;\n  var nodeObj;\n\n  // `NodeList` is array-like\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    node = nodes[i];\n    // reset\n    nodeObj = {\n      next: null,\n      prev: result[i - 1] || null,\n      parent: parentObj\n    };\n\n    // set the next node for the previous node (if applicable)\n    prevNode = result[i - 1];\n    if (prevNode) {\n      prevNode.next = nodeObj;\n    }\n\n    // set the node name if it's not \"#text\" or \"#comment\"\n    // e.g., \"div\"\n    if (node.nodeName[0] !== '#') {\n      nodeObj.name = formatTagName(node.nodeName);\n      // also, nodes of type \"tag\" have \"attribs\"\n      nodeObj.attribs = {}; // default\n      if (node.attributes && node.attributes.length) {\n        nodeObj.attribs = formatAttributes(node.attributes);\n      }\n    }\n\n    // set the node type\n    // e.g., \"tag\"\n    switch (node.nodeType) {\n      // 1 = element\n      case 1:\n        if (nodeObj.name === 'script' || nodeObj.name === 'style') {\n          nodeObj.type = nodeObj.name;\n        } else {\n          nodeObj.type = 'tag';\n        }\n        // recursively format the children\n        nodeObj.children = formatDOM(node.childNodes, nodeObj);\n        break;\n      // 2 = attribute\n      // 3 = text\n      case 3:\n        nodeObj.type = 'text';\n        nodeObj.data = node.nodeValue;\n        break;\n      // 8 = comment\n      case 8:\n        nodeObj.type = 'comment';\n        nodeObj.data = node.nodeValue;\n        break;\n    }\n    result.push(nodeObj);\n  }\n  if (directive) {\n    result.unshift({\n      name: directive.substring(0, directive.indexOf(' ')).toLowerCase(),\n      data: directive,\n      type: 'directive',\n      next: result[0] ? result[0] : null,\n      prev: null,\n      parent: parentObj\n    });\n    if (result[1]) {\n      result[1].prev = result[0];\n    }\n  }\n  return result;\n}\n\n/**\n * Detects IE with or without version.\n *\n * @param  {Number}  [version] - The IE version to detect.\n * @return {Boolean}           - Whether IE or the version has been detected.\n */\nfunction isIE(version) {\n  if (version) {\n    return document.documentMode === version;\n  }\n  return /(MSIE |Trident\\/|Edge\\/)/.test(navigator.userAgent);\n}\nmodule.exports = {\n  formatAttributes: formatAttributes,\n  formatDOM: formatDOM,\n  isIE: isIE\n};","map":{"version":3,"names":["CASE_SENSITIVE_TAG_NAMES","require","caseSensitiveTagNamesMap","tagName","i","len","length","toLowerCase","getCaseSensitiveTagName","formatAttributes","attributes","result","attribute","name","value","formatTagName","caseSensitiveTagName","formatDOM","nodes","parentObj","directive","node","prevNode","nodeObj","next","prev","parent","nodeName","attribs","nodeType","type","children","childNodes","data","nodeValue","push","unshift","substring","indexOf","isIE","version","document","documentMode","test","navigator","userAgent","module","exports"],"sources":["/Users/oluwatobilobaogunbi/Desktop/UOttawa/tobiogunbiwebsite/react-portfolio/node_modules/html-dom-parser/lib/utilities.js"],"sourcesContent":["var CASE_SENSITIVE_TAG_NAMES = require('./constants').CASE_SENSITIVE_TAG_NAMES;\n\nvar caseSensitiveTagNamesMap = {};\nvar tagName;\nfor (var i = 0, len = CASE_SENSITIVE_TAG_NAMES.length; i < len; i++) {\n  tagName = CASE_SENSITIVE_TAG_NAMES[i];\n  caseSensitiveTagNamesMap[tagName.toLowerCase()] = tagName;\n}\n\n/**\n * Gets case-sensitive tag name.\n *\n * @param  {String}           tagName - The lowercase tag name.\n * @return {String|undefined}\n */\nfunction getCaseSensitiveTagName(tagName) {\n  return caseSensitiveTagNamesMap[tagName];\n}\n\n/**\n * Formats DOM attributes to a hash map.\n *\n * @param  {NamedNodeMap} attributes - The list of attributes.\n * @return {Object}                  - A map of attribute name to value.\n */\nfunction formatAttributes(attributes) {\n  var result = {};\n  var attribute;\n  // `NamedNodeMap` is array-like\n  for (var i = 0, len = attributes.length; i < len; i++) {\n    attribute = attributes[i];\n    result[attribute.name] = attribute.value;\n  }\n  return result;\n}\n\n/**\n * Corrects the tag name if it is case-sensitive (SVG).\n * Otherwise, returns the lowercase tag name (HTML).\n *\n * @param  {String} tagName - The lowercase tag name.\n * @return {String}         - The formatted tag name.\n */\nfunction formatTagName(tagName) {\n  tagName = tagName.toLowerCase();\n  var caseSensitiveTagName = getCaseSensitiveTagName(tagName);\n  if (caseSensitiveTagName) {\n    return caseSensitiveTagName;\n  }\n  return tagName;\n}\n\n/**\n * Formats the browser DOM nodes to mimic the output of `htmlparser2.parseDOM()`.\n *\n * @param  {NodeList} nodes        - The DOM nodes.\n * @param  {Object}   [parentObj]  - The formatted parent node.\n * @param  {String}   [directive]  - The directive.\n * @return {Object[]}              - The formatted DOM object.\n */\nfunction formatDOM(nodes, parentObj, directive) {\n  parentObj = parentObj || null;\n\n  var result = [];\n  var node;\n  var prevNode;\n  var nodeObj;\n\n  // `NodeList` is array-like\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    node = nodes[i];\n    // reset\n    nodeObj = {\n      next: null,\n      prev: result[i - 1] || null,\n      parent: parentObj\n    };\n\n    // set the next node for the previous node (if applicable)\n    prevNode = result[i - 1];\n    if (prevNode) {\n      prevNode.next = nodeObj;\n    }\n\n    // set the node name if it's not \"#text\" or \"#comment\"\n    // e.g., \"div\"\n    if (node.nodeName[0] !== '#') {\n      nodeObj.name = formatTagName(node.nodeName);\n      // also, nodes of type \"tag\" have \"attribs\"\n      nodeObj.attribs = {}; // default\n      if (node.attributes && node.attributes.length) {\n        nodeObj.attribs = formatAttributes(node.attributes);\n      }\n    }\n\n    // set the node type\n    // e.g., \"tag\"\n    switch (node.nodeType) {\n      // 1 = element\n      case 1:\n        if (nodeObj.name === 'script' || nodeObj.name === 'style') {\n          nodeObj.type = nodeObj.name;\n        } else {\n          nodeObj.type = 'tag';\n        }\n        // recursively format the children\n        nodeObj.children = formatDOM(node.childNodes, nodeObj);\n        break;\n      // 2 = attribute\n      // 3 = text\n      case 3:\n        nodeObj.type = 'text';\n        nodeObj.data = node.nodeValue;\n        break;\n      // 8 = comment\n      case 8:\n        nodeObj.type = 'comment';\n        nodeObj.data = node.nodeValue;\n        break;\n    }\n\n    result.push(nodeObj);\n  }\n\n  if (directive) {\n    result.unshift({\n      name: directive.substring(0, directive.indexOf(' ')).toLowerCase(),\n      data: directive,\n      type: 'directive',\n      next: result[0] ? result[0] : null,\n      prev: null,\n      parent: parentObj\n    });\n\n    if (result[1]) {\n      result[1].prev = result[0];\n    }\n  }\n\n  return result;\n}\n\n/**\n * Detects IE with or without version.\n *\n * @param  {Number}  [version] - The IE version to detect.\n * @return {Boolean}           - Whether IE or the version has been detected.\n */\nfunction isIE(version) {\n  if (version) {\n    return document.documentMode === version;\n  }\n  return /(MSIE |Trident\\/|Edge\\/)/.test(navigator.userAgent);\n}\n\nmodule.exports = {\n  formatAttributes: formatAttributes,\n  formatDOM: formatDOM,\n  isIE: isIE\n};\n"],"mappings":"AAAA,IAAIA,wBAAwB,GAAGC,OAAO,CAAC,aAAa,CAAC,CAACD,wBAAwB;AAE9E,IAAIE,wBAAwB,GAAG,CAAC,CAAC;AACjC,IAAIC,OAAO;AACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGL,wBAAwB,CAACM,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;EACnED,OAAO,GAAGH,wBAAwB,CAACI,CAAC,CAAC;EACrCF,wBAAwB,CAACC,OAAO,CAACI,WAAW,CAAC,CAAC,CAAC,GAAGJ,OAAO;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,uBAAuBA,CAACL,OAAO,EAAE;EACxC,OAAOD,wBAAwB,CAACC,OAAO,CAAC;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,gBAAgBA,CAACC,UAAU,EAAE;EACpC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,IAAIC,SAAS;EACb;EACA,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGK,UAAU,CAACJ,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;IACrDQ,SAAS,GAAGF,UAAU,CAACN,CAAC,CAAC;IACzBO,MAAM,CAACC,SAAS,CAACC,IAAI,CAAC,GAAGD,SAAS,CAACE,KAAK;EAC1C;EACA,OAAOH,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,aAAaA,CAACZ,OAAO,EAAE;EAC9BA,OAAO,GAAGA,OAAO,CAACI,WAAW,CAAC,CAAC;EAC/B,IAAIS,oBAAoB,GAAGR,uBAAuB,CAACL,OAAO,CAAC;EAC3D,IAAIa,oBAAoB,EAAE;IACxB,OAAOA,oBAAoB;EAC7B;EACA,OAAOb,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASc,SAASA,CAACC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAE;EAC9CD,SAAS,GAAGA,SAAS,IAAI,IAAI;EAE7B,IAAIR,MAAM,GAAG,EAAE;EACf,IAAIU,IAAI;EACR,IAAIC,QAAQ;EACZ,IAAIC,OAAO;;EAEX;EACA,KAAK,IAAInB,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGa,KAAK,CAACZ,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;IAChDiB,IAAI,GAAGH,KAAK,CAACd,CAAC,CAAC;IACf;IACAmB,OAAO,GAAG;MACRC,IAAI,EAAE,IAAI;MACVC,IAAI,EAAEd,MAAM,CAACP,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI;MAC3BsB,MAAM,EAAEP;IACV,CAAC;;IAED;IACAG,QAAQ,GAAGX,MAAM,CAACP,CAAC,GAAG,CAAC,CAAC;IACxB,IAAIkB,QAAQ,EAAE;MACZA,QAAQ,CAACE,IAAI,GAAGD,OAAO;IACzB;;IAEA;IACA;IACA,IAAIF,IAAI,CAACM,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MAC5BJ,OAAO,CAACV,IAAI,GAAGE,aAAa,CAACM,IAAI,CAACM,QAAQ,CAAC;MAC3C;MACAJ,OAAO,CAACK,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;MACtB,IAAIP,IAAI,CAACX,UAAU,IAAIW,IAAI,CAACX,UAAU,CAACJ,MAAM,EAAE;QAC7CiB,OAAO,CAACK,OAAO,GAAGnB,gBAAgB,CAACY,IAAI,CAACX,UAAU,CAAC;MACrD;IACF;;IAEA;IACA;IACA,QAAQW,IAAI,CAACQ,QAAQ;MACnB;MACA,KAAK,CAAC;QACJ,IAAIN,OAAO,CAACV,IAAI,KAAK,QAAQ,IAAIU,OAAO,CAACV,IAAI,KAAK,OAAO,EAAE;UACzDU,OAAO,CAACO,IAAI,GAAGP,OAAO,CAACV,IAAI;QAC7B,CAAC,MAAM;UACLU,OAAO,CAACO,IAAI,GAAG,KAAK;QACtB;QACA;QACAP,OAAO,CAACQ,QAAQ,GAAGd,SAAS,CAACI,IAAI,CAACW,UAAU,EAAET,OAAO,CAAC;QACtD;MACF;MACA;MACA,KAAK,CAAC;QACJA,OAAO,CAACO,IAAI,GAAG,MAAM;QACrBP,OAAO,CAACU,IAAI,GAAGZ,IAAI,CAACa,SAAS;QAC7B;MACF;MACA,KAAK,CAAC;QACJX,OAAO,CAACO,IAAI,GAAG,SAAS;QACxBP,OAAO,CAACU,IAAI,GAAGZ,IAAI,CAACa,SAAS;QAC7B;IACJ;IAEAvB,MAAM,CAACwB,IAAI,CAACZ,OAAO,CAAC;EACtB;EAEA,IAAIH,SAAS,EAAE;IACbT,MAAM,CAACyB,OAAO,CAAC;MACbvB,IAAI,EAAEO,SAAS,CAACiB,SAAS,CAAC,CAAC,EAAEjB,SAAS,CAACkB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC/B,WAAW,CAAC,CAAC;MAClE0B,IAAI,EAAEb,SAAS;MACfU,IAAI,EAAE,WAAW;MACjBN,IAAI,EAAEb,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI;MAClCc,IAAI,EAAE,IAAI;MACVC,MAAM,EAAEP;IACV,CAAC,CAAC;IAEF,IAAIR,MAAM,CAAC,CAAC,CAAC,EAAE;MACbA,MAAM,CAAC,CAAC,CAAC,CAACc,IAAI,GAAGd,MAAM,CAAC,CAAC,CAAC;IAC5B;EACF;EAEA,OAAOA,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS4B,IAAIA,CAACC,OAAO,EAAE;EACrB,IAAIA,OAAO,EAAE;IACX,OAAOC,QAAQ,CAACC,YAAY,KAAKF,OAAO;EAC1C;EACA,OAAO,0BAA0B,CAACG,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;AAC7D;AAEAC,MAAM,CAACC,OAAO,GAAG;EACftC,gBAAgB,EAAEA,gBAAgB;EAClCQ,SAAS,EAAEA,SAAS;EACpBsB,IAAI,EAAEA;AACR,CAAC"},"metadata":{},"sourceType":"script"}