{"ast":null,"code":"var domToReact = require('./lib/dom-to-react');\nvar htmlToDOM = require('html-dom-parser');\n\n// decode HTML entities by default for `htmlparser2`\nvar domParserOptions = {\n  decodeEntities: true,\n  lowerCaseAttributeNames: false\n};\n\n/**\n * Converts HTML string to React elements.\n *\n * @param  {String}   html                    - The HTML string to parse to React.\n * @param  {Object}   [options]               - The parser options.\n * @param  {Function} [options.replace]       - The replace method.\n * @return {JSX.Element|JSX.Element[]|String} - Returns React element(s), string, or empty array.\n */\nfunction HTMLReactParser(html, options) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n  return domToReact(htmlToDOM(html, domParserOptions), options);\n}\nHTMLReactParser.domToReact = domToReact;\nHTMLReactParser.htmlToDOM = htmlToDOM;\n\n// support CommonJS and ES Modules\nmodule.exports = HTMLReactParser;\nmodule.exports.default = HTMLReactParser;","map":{"version":3,"names":["domToReact","require","htmlToDOM","domParserOptions","decodeEntities","lowerCaseAttributeNames","HTMLReactParser","html","options","TypeError","module","exports","default"],"sources":["/Users/oluwatobilobaogunbi/Desktop/UOttawa/tobiogunbiwebsite/react-portfolio/node_modules/html-react-parser/index.js"],"sourcesContent":["var domToReact = require('./lib/dom-to-react');\nvar htmlToDOM = require('html-dom-parser');\n\n// decode HTML entities by default for `htmlparser2`\nvar domParserOptions = { decodeEntities: true, lowerCaseAttributeNames: false };\n\n/**\n * Converts HTML string to React elements.\n *\n * @param  {String}   html                    - The HTML string to parse to React.\n * @param  {Object}   [options]               - The parser options.\n * @param  {Function} [options.replace]       - The replace method.\n * @return {JSX.Element|JSX.Element[]|String} - Returns React element(s), string, or empty array.\n */\nfunction HTMLReactParser(html, options) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n  return domToReact(htmlToDOM(html, domParserOptions), options);\n}\n\nHTMLReactParser.domToReact = domToReact;\nHTMLReactParser.htmlToDOM = htmlToDOM;\n\n// support CommonJS and ES Modules\nmodule.exports = HTMLReactParser;\nmodule.exports.default = HTMLReactParser;\n"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAC9C,IAAIC,SAAS,GAAGD,OAAO,CAAC,iBAAiB,CAAC;;AAE1C;AACA,IAAIE,gBAAgB,GAAG;EAAEC,cAAc,EAAE,IAAI;EAAEC,uBAAuB,EAAE;AAAM,CAAC;;AAE/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACtC,IAAI,OAAOD,IAAI,KAAK,QAAQ,EAAE;IAC5B,MAAM,IAAIE,SAAS,CAAC,iCAAiC,CAAC;EACxD;EACA,OAAOT,UAAU,CAACE,SAAS,CAACK,IAAI,EAAEJ,gBAAgB,CAAC,EAAEK,OAAO,CAAC;AAC/D;AAEAF,eAAe,CAACN,UAAU,GAAGA,UAAU;AACvCM,eAAe,CAACJ,SAAS,GAAGA,SAAS;;AAErC;AACAQ,MAAM,CAACC,OAAO,GAAGL,eAAe;AAChCI,MAAM,CAACC,OAAO,CAACC,OAAO,GAAGN,eAAe"},"metadata":{},"sourceType":"script"}